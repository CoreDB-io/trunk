name: 'Build and push to Quay'
description: 'Builds a container image and pushes it to our Quay organization'
inputs:
  image_name:
    description: 'The name of the image, not including the registry or the tag, for example "postgres"'
    required: true
  registry:
    description: 'The name of the image, not including the registry or the tag, for example "postgres"'
    required: false
    default: "quay.io/coredb"
  docker_directory:
    description: 'The relative path to a directory in which there is a Dockerfile'
    required: false
    default: '.'
  push:
    required: false
    default: true
    description: "Should we push images?"
  quay_user:
    required: true
    description: "Quay 'robot user' user name"
  quay_password:
    required: true
    description: "Quay 'robot user' access token"
  publish_calver:
    description: 'Should we tag with calender versioning?'
    required: false
    default: false
  calver_suffix:
    description: 'Optional suffix to the calendar version'
    required: false
    default: ""
  publish_latest:
    description: "Should we tag with 'latest'?"
    required: false
    default: false
  publish_sha:
    description: "Should we tag with a short git sha?"
    required: false
    default: false
  tags:
    description: "Whitespace-separated tags, not including the registry, for example 'v1' or 'v1 release-1.0'. There are also some default tags provided, please see the other options of this action."
    required: false
    default: ""
  build_args:
    description: "Build arguments to pass to the Docker build using --build-arg. Use the form arg_name=arg_value, and separate arguments with newlines."
    required: false
    default: ""
outputs: {}
runs:
  using: "composite"
  steps:
    - name: Create whitespace-separated tags list
      shell: bash
      id: tags
      run: |
        set -e
        # input tags
        TAGS='${{ inputs.tags }}'
        cd ${{ inputs.docker_directory }}
        # Calendar version
        if [ "${{ inputs.publish_calver }}" == "true" ]; then
          # A date without leading zeros, for example:
          # 2023.1.26
          CAL_VER=$(date '+%Y.%-m.%-d')
          TAGS="$TAGS ${CAL_VER}${{ inputs.calver_suffix }}"
        fi
        # latest
        if [ "${{ inputs.publish_latest }}" == "true" ]; then
          TAGS="$TAGS latest"
        fi
        if [ "${{ inputs.publish_sha }}" == "true" ]; then
          # Short Git hash
          SHORT_SHA=$(git rev-parse --short HEAD)
          TAGS="$TAGS ${SHORT_SHA}"
        fi
        echo "TAGS=$TAGS" >> $GITHUB_OUTPUT
    - name: Run pre-build hooks
      shell: bash
      run: |
        cd ${{ inputs.docker_directory }}
        if [[ -f pre-build-hook.sh ]]; then
          echo "detected pre-build hook, running"
          /bin/bash pre-build-hook.sh
        else
          echo "no pre build hook detected"
        fi
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Buildah Action
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ inputs.image_name }}
        tags: ${{ steps.tags.outputs.TAGS }}
        archs: amd64, arm64
        extra-args: |
          --pull
        containerfiles: |
          ${{ inputs.docker_directory }}/Dockerfile
        build-args: ${{ inputs.build_args }}
    - name: Push To quay.io
      uses: redhat-actions/push-to-registry@v2
      if: ${{ inputs.push }}
      with:
        registry: ${{ inputs.registry }}
        image: ${{ inputs.image_name }}
        tags: ${{ steps.tags.outputs.TAGS }}
        username: ${{ inputs.quay_user }}
        password: ${{ inputs.quay_password }}
